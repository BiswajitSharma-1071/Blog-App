{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Biswajit Sharma\\\\Desktop\\\\React_Work\\\\Keeper_App\\\\src\\\\components\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport Header from \"./Header\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction App() {\n  const [noteList, setNoteList] = useState([]);\n  const [deletedNoteList, setDeletedNoteList] = useState([]);\n  const [open, setOpen] = useState(true);\n  const [name, setName] = useState(\"\");\n\n  function addNote(noteContent) {\n    setNoteList(prevValues => {\n      return [...prevValues, noteContent];\n    });\n  }\n\n  function deleteItem(id) {\n    setDeletedNoteList(prevValues => {\n      return [...prevValues, {\n        index: id,\n        note: noteList[id]\n      }];\n    });\n    setNoteList(preValues => {\n      return preValues.filter((element, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  function restoreContent() {\n    let deleItems = deletedNoteList;\n    let delItems = deleItems.pop();\n    let ind = delItems.index;\n    let noteData = delItems.note;\n    let newItems = [...noteList];\n    newItems.splice(ind, 0, noteData);\n    setNoteList([...newItems]);\n    setDeletedNoteList([...deleItems]);\n  }\n\n  function handleDialogChange(event) {\n    const nameVar = event.target.name;\n    setName(nameVar);\n  } //<Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n  //   Open form dialog\n  // </Button>\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    onClose: () => {\n      setOpen(false);\n    },\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"xs\",\n    style: {\n      textAlign: \"center\",\n      backgroundColor: \"#beee4d\",\n      fontFamily: \"Arial\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      textAlign: \"center\",\n      backgroundColor: \"#beee4d\",\n      fontFamily: \"Arial\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Hi There !!!\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"Arial\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Enter Your Name:\"), React.createElement(TextField, {\n    onChange: handleDialogChange,\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Name\",\n    type: \"text\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Okay\")))), React.createElement(Header, {\n    userName: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(CreateArea, {\n    onAdd: addNote,\n    deletedListNote: deletedNoteList,\n    restoreItems: restoreContent,\n    onClear: () => {\n      if (noteList.length && window.confirm(\"This action will remove all your notes \")) {\n        setNoteList([]);\n      } else if (!noteList.length) {\n        return \"No notes to clear.\";\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), noteList.map((value, index) => {\n    return React.createElement(Note, {\n      key: index,\n      id: index,\n      title: value.title,\n      content: value.content,\n      onDelete: deleteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    });\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Biswajit Sharma/Desktop/React_Work/Keeper_App/src/components/App.jsx"],"names":["React","useState","Footer","Note","CreateArea","Header","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","App","noteList","setNoteList","deletedNoteList","setDeletedNoteList","open","setOpen","name","setName","addNote","noteContent","prevValues","deleteItem","id","index","note","preValues","filter","element","restoreContent","deleItems","delItems","pop","ind","noteData","newItems","splice","handleDialogChange","event","nameVar","target","textAlign","backgroundColor","fontFamily","handleClose","length","window","confirm","map","value","title","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport Header from \"./Header\"\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction App() {\n  const [noteList, setNoteList] = useState([]);\n  const [deletedNoteList, setDeletedNoteList] = useState([]);\n  const [open, setOpen] = useState(true);\n  const [name, setName] = useState(\"\")\n\n  \n  function addNote(noteContent) {\n    setNoteList(prevValues => {\n      return [...prevValues, noteContent];\n    });\n  }\n\n  function deleteItem(id) {\n    setDeletedNoteList(prevValues => {\n      return [...prevValues,\n      {\n        index: id,\n        note: noteList[id]\n      }\n      ]\n    })\n\n    setNoteList(preValues => {\n      return preValues.filter((element, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  function restoreContent() {\n    let deleItems = deletedNoteList;\n    let delItems = deleItems.pop();\n    let ind = delItems.index\n    let noteData = delItems.note\n    let newItems = [...noteList];\n\n    newItems.splice(ind, 0, noteData);\n\n    setNoteList([...newItems])\n    setDeletedNoteList([...deleItems]);\n  }\n\n\n  function handleDialogChange(event){\n      const nameVar = event.target.name\n      setName(nameVar)\n    }\n\n\n  //<Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n  //   Open form dialog\n  // </Button>\n  return (\n    <div >\n\n      <div>\n        <Dialog open={open} onClose={ () => {\n            setOpen(false);\n          }}\n          aria-labelledby=\"form-dialog-title\" maxWidth=\"xs\"\n          style={{\n            textAlign: \"center\",\n            backgroundColor: \"#beee4d\",\n            fontFamily: \"Arial\"\n          }}>\n          <DialogTitle id=\"form-dialog-title\"\n            style={{\n              textAlign: \"center\",\n              backgroundColor: \"#beee4d\",\n              fontFamily: \"Arial\"\n            }}>\n            Hi There !!!\n        </DialogTitle>\n          <DialogContent>\n            <DialogContentText\n              style={{\n                textAlign: \"center\",\n                fontFamily: \"Arial\"\n              }}>\n              Enter Your Name:\n          </DialogContentText>\n            <TextField\n              onChange={handleDialogChange}\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Name\"\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Okay\n          </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n\n      <Header userName={name} />\n      <CreateArea onAdd={addNote}\n        deletedListNote={deletedNoteList}\n        restoreItems={restoreContent}\n        onClear={() => {\n          if (noteList.length && window.confirm(\"This action will remove all your notes \")) {\n            setNoteList([])\n          }\n          else if (!noteList.length) {\n            return (\"No notes to clear.\")\n          }\n        }}\n      />\n      {\n        noteList.map((value, index) => {\n          return (\n            <Note\n              key={index}\n              id={index}\n              title={value.title}\n              content={value.content}\n              onDelete={deleteItem}\n            />\n          );\n        })\n      }\n      <Footer />\n    </div >\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}