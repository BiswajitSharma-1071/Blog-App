{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Biswajit Sharma\\\\Desktop\\\\React_Work\\\\Keeper_App\\\\src\\\\components\\\\CreateArea.jsx\";\nimport React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport RestoreIcon from '@material-ui/icons/Restore';\n\nfunction CreateArea(props) {\n  const [isExpanded, setExpanded] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [noteContent, setNoteContent] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    let {\n      name,\n      value\n    } = event.target;\n    setNoteContent(prevValues => {\n      return { ...prevValues,\n        [name]: value\n      };\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"formInput\",\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (noteContent.title.trim() !== \"\" && noteContent.content.trim() !== \"\") {\n        props.onAdd(noteContent);\n        setNoteContent({\n          title: \"\",\n          content: \"\"\n        });\n        setErrMsg(\"\");\n      } else {\n        setErrMsg(\"Empty Title or Content area.\");\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"inpClass\",\n    onClick: () => {\n      setExpanded(true);\n    },\n    onDoubleClick: () => {\n      setExpanded(false);\n    },\n    onChange: handleChange,\n    name: \"title\",\n    placeholder: \"Title\",\n    value: noteContent.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), isExpanded && React.createElement(\"textarea\", {\n    onMouseOut: () => {\n      setErrMsg(\"\");\n    },\n    onChange: handleChange,\n    name: \"content\",\n    placeholder: \"Take a note...\",\n    rows: \"3\",\n    value: noteContent.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Zoom, {\n    in: isExpanded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    className: \"butClass\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), React.createElement(Zoom, {\n    in: isExpanded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    className: \"butClass2\",\n    onClick: () => {\n      if (props.deletedListNote.length) {\n        setErrMsg(\"\");\n        props.restoreItems();\n      } else {\n        setErrMsg(\"No Items to Restore.\");\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(RestoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), errMsg && React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, errMsg)));\n}\n\nexport default CreateArea;","map":{"version":3,"sources":["C:/Users/Biswajit Sharma/Desktop/React_Work/Keeper_App/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","RestoreIcon","CreateArea","props","isExpanded","setExpanded","errMsg","setErrMsg","noteContent","setNoteContent","title","content","handleChange","event","name","value","target","prevValues","preventDefault","trim","onAdd","deletedListNote","length","restoreItems","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport RestoreIcon from '@material-ui/icons/Restore';\n\nfunction CreateArea(props) {\n\n  const [isExpanded, setExpanded] = useState(false)\n  const [errMsg, setErrMsg] = useState(\"\")\n  const [noteContent, setNoteContent] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    let { name, value } = event.target;\n    setNoteContent(prevValues => {\n      return {\n        ...prevValues,\n        [name]: value\n      };\n    });\n  }\n\n  return (\n    <div >\n      <form className=\"formInput\"\n        onSubmit={event => {\n          event.preventDefault();\n          if (noteContent.title.trim() !== \"\" && noteContent.content.trim() !== \"\") {\n            props.onAdd(noteContent);\n            setNoteContent({\n              title: \"\",\n              content: \"\"\n            });\n            setErrMsg(\"\")\n          }\n          else {\n            setErrMsg(\"Empty Title or Content area.\")\n          }\n        }\n        }\n      >\n        <input className=\"inpClass\"\n          onClick={() => { setExpanded(true); }}\n          onDoubleClick={() => { setExpanded(false); }}\n          onChange={handleChange}\n          name=\"title\"\n          placeholder=\"Title\"\n          value={noteContent.title}\n        />\n        {isExpanded && <textarea\n          onMouseOut={() => { setErrMsg(\"\") }}\n          onChange={handleChange}\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n          value={noteContent.content}\n        />}\n        <Zoom in={isExpanded}>\n          <Fab className=\"butClass\" type=\"submit\">\n            <AddIcon />\n          </Fab>\n        </Zoom>\n        <Zoom in={isExpanded}>\n          <Fab className=\"butClass2\"\n            onClick={() => {\n              if (props.deletedListNote.length) {\n                setErrMsg(\"\")\n                props.restoreItems();\n              }\n              else {\n                setErrMsg(\"No Items to Restore.\")\n              }\n            }}\n            >\n            <RestoreIcon />\n          </Fab>\n        </Zoom>\n        {errMsg && <div style={{ color: 'red' }}>{errMsg}</div>}\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;"]},"metadata":{},"sourceType":"module"}